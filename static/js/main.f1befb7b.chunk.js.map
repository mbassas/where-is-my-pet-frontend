{"version":3,"sources":["config.ts","Services/WhereIsMyPetApiClient/Controllers/BaseController.ts","Services/WhereIsMyPetApiClient/Controllers/UserController.ts","Services/WhereIsMyPetApiClient/Controllers/AnimalController.ts","Services/WhereIsMyPetApiClient/Controllers/SpeciesController.ts","Services/WhereIsMyPetApiClient/Controllers/BreedController.ts","Services/WhereIsMyPetApiClient/WhereIsMyPetApiClient.ts","Components/SignupMenu.tsx","Components/Layouts/SignUpPagesLayout.tsx","Pages/SignUp.tsx","Pages/SignIn.tsx","Pages/RecoverPassword.tsx","Services/Geolocation/GeolocationService.ts","Components/Inputs/LocationInput.tsx","Components/UploadAnimalForm/Fields/SpeciesInput.tsx","Components/UploadAnimalForm/Fields/StatusInput.tsx","Components/UploadAnimalForm/Fields/BreedInput.tsx","Components/UploadAnimalForm/Fields/SizeInput.tsx","Components/UploadAnimalForm/Fields/AnimalImageInput.tsx","Components/UploadAnimalForm/Fields/AnimalGenderInput.tsx","Components/UploadAnimalForm/UploadAnimalForm.tsx","Components/Layouts/MainLayout/Header.tsx","Components/Layouts/MainLayout/MainLayout.tsx","Pages/UploadAnimal.tsx","Pages/ViewAnimal.tsx","index.tsx"],"names":["Config","BASE_URL","BaseController","token","$WhereIsMyPetApiClient","getToken","authorization","method","params","headers","url","axios","request","data","this","authHeader","UsersController","password","makeRequest","newPassword","usernameOrEmail","user","username","AnimalsController","animal","FormData","Object","entries","forEach","key","value","append","SpeciesController","BreedsController","species","Users","Animals","Species","Breeds","localStorage","getItem","setItem","SignUpMenu","location","useLocation","test","pathname","Tabs","variant","indicatorColor","Tab","label","component","Link","to","useStyles","makeStyles","title","marginTop","marginBottom","fontSize","textAlign","width","container","paddingTop","minHeight","background","wrapper","padding","position","backdrop","display","justifyContent","alignItems","top","left","height","zIndex","SignUpPagesLayout","children","isLoading","showTabs","classes","Container","className","Grid","justify","Paper","xs","sm","md","item","CircularProgress","SignUp","state","values","name","surname","email","phone","isSubmitting","submitError","_onSubmit","event","a","preventDefault","setState","_onChange","currentTarget","props","Alert","severity","onSubmit","TextField","required","margin","type","onChange","input","PasswordInput","Button","color","disabled","fullWidth","Component","React","useState","showPassword","setShowPassword","showPasswordButton","InputAdornment","IconButton","aria-label","onClick","onMouseDown","e","InputProps","endAdornment","styles","createStyles","withStyles","SignIn","response","setToken","forgotPassword","RecoverPasswordWithoutToken","setIsSubmitting","submitSuccess","setSubmitSuccess","setSubmitError","emptyField","setEmptyField","invalidParams","setInvalidParams","setUsernameOrEmail","SendResetPassword","RecoverPasswordWithToken","setPassword","password2","setPassword2","passwordsDoNotMatch","setPasswordsDoNotMatch","ResetPassword","RecoverPassword","h","URLSearchParams","search","get","geocodeBaseUrl","getAddress","lat","lng","Axios","getLatLon","getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","LocationInput","inputProps","setValue","locateUser","currentLocation","coords","latitude","longitude","console","log","address","lon","postcode","town","parseFloat","display_name","split","useEffect","locationButton","Tooltip","placement","onBlur","Labels","CAT","DOG","OTHER","SpeciesInput","useFormikContext","handleChange","setSpecies","Get","then","FormControl","FormLabel","RadioGroup","row","map","specie","FormControlLabel","control","Radio","AnimalStatusInput","setFieldValue","status","_","newValue","EAnimalStatus","LOST","FOUND","theme","formControl","spacing","minWidth","selectEmpty","BreedInput","breeds","setBreeds","sort","InputLabel","htmlFor","Select","native","breed","id","SizeInput","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","size","EAnimalSize","SMALL","MEDIUM","BIG","flexDirection","previewWrapper","flexGrow","border","palette","divider","borderRadius","shape","grey","cursor","preview","maxWidth","maxHeight","AnimalImageInput","inputRef","useRef","setPreview","current","click","src","target","files","length","reader","FileReader","file","onloadend","result","readAsDataURL","ref","accept","AnimalGenderInput","EAnimalGender","gender","MALE","FEMALE","initialValues","EMPTY","age","undefined","images","UploadAnimalForm","isValid","form","statusInput","animalImageInput","locationInput","uploadButton","gridGap","up","gridTemplateColumns","gridColumn","gridRow","UploadAnimalFormContainer","setSubmitting","UploadAnimal","validate","errors","root","menuButton","marginRight","Header","AppBar","Toolbar","edge","Typography","MainLayout","ViewAnimal","ReactDOM","render","StrictMode","CssBaseline","path","document","getElementById"],"mappings":"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","file":"static/js/main.f1befb7b.chunk.js","sourcesContent":["const isProduction = process.env.NODE_ENV === \"production\";\r\n\r\nconst Config = {\r\n    BASE_URL: isProduction ? \"https://where-is-my-pet.herokuapp.com\" : \"http://localhost:3001\",\r\n}\r\n\r\nexport default Config;","import axios from \"axios\";\r\nimport Config from \"../../../config\";\r\nimport $WhereIsMyPetApiClient from \"../WhereIsMyPetApiClient\";\r\n\r\ninterface IMakeRequestParams {\r\n    method: \"GET\" | \"POST\";\r\n    url: string;\r\n    params?: object;\r\n    headers?: object;\r\n}\r\n\r\nabstract class BaseController {\r\n    private authHeader() {\r\n        const token = $WhereIsMyPetApiClient.getToken();\r\n\r\n        if (!token) {\r\n            return {};\r\n        }\r\n\r\n        return {\r\n            authorization: `Bearer ${token}`,\r\n        };\r\n    }\r\n\r\n    protected makeRequest<T = any>({ method, params = {}, headers = {}, url }: IMakeRequestParams) {\r\n        return axios.request<T>({\r\n            method,\r\n            url: `${Config.BASE_URL}${url}`,\r\n            data: params,\r\n            headers: {\r\n                ...headers,\r\n                ...this.authHeader()\r\n            },\r\n        })\r\n    }\r\n}\r\n\r\nexport default BaseController;\r\n","import BaseController from \"./BaseController\";\r\n\r\ninterface ISignUpParams {\r\n    name: string;\r\n    surname: string;\r\n    email: string;\r\n    phone: string;\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nclass UsersController extends BaseController {\r\n    public ResetPassword(token: string, password: string) {\r\n        const url = \"/users/reset-password\";\r\n\r\n        return this.makeRequest<void>({\r\n            method: \"POST\",\r\n            url,\r\n            params: {token, newPassword: password}\r\n        })\r\n    }\r\n\r\n    public SendResetPassword( usernameOrEmail: string) {\r\n        const url = \"/users/reset-password-email\";\r\n\r\n        return this.makeRequest<void>({\r\n            method: \"POST\",\r\n            url,\r\n            params: { usernameOrEmail: usernameOrEmail }\r\n        })\r\n    }\r\n\r\n    public SignUp(user: ISignUpParams) {\r\n        const url = \"/users/sign-up\";\r\n\r\n        return this.makeRequest<{ token: string }>({\r\n            method: \"POST\",\r\n            url,\r\n            params: user\r\n        });\r\n    }\r\n\r\n    public SignIn(username: string, password: string) {\r\n        const url = \"/users/sign-in\";\r\n\r\n        return this.makeRequest<{ token: string }>({\r\n            method: \"POST\",\r\n            url,\r\n            params: { username, password }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default UsersController;\r\n","import BaseController from \"./BaseController\";\r\nimport { IAnimalFormValues } from \"../../../Components/UploadAnimalForm/UploadAnimalForm\";\r\n\r\nclass AnimalsController extends BaseController {\r\n\r\n    public UploadAnimal(animal: IAnimalFormValues) {\r\n        const url = \"/animals\";\r\n\r\n        const data = new FormData();\r\n\r\n        Object.entries(animal).forEach(([key, value]) => {\r\n            if(value) {\r\n                data.append(key, value);\r\n            }\r\n        });\r\n\r\n\r\n        return this.makeRequest<void>({\r\n            method: \"POST\",\r\n            url,\r\n            params: data,\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default AnimalsController;\r\n","import BaseController from \"./BaseController\";\r\n\r\nclass SpeciesController extends BaseController {\r\n    public Get() {\r\n        return this.makeRequest<string[]>({\r\n            method: \"GET\",\r\n            url: \"/Species\",\r\n        });\r\n    }\r\n}\r\n\r\nexport default SpeciesController;\r\n","import BaseController from \"./BaseController\";\r\n\r\nclass BreedsController extends BaseController {\r\n    public Get(species: string) {\r\n        return this.makeRequest<string[]>({\r\n            method: \"GET\",\r\n            url: `/Breeds/${species}`,\r\n            \r\n        });\r\n    }\r\n}\r\n\r\nexport default BreedsController;\r\n","import UsersController from './Controllers/UserController';\r\nimport AnimalsController from './Controllers/AnimalController';\r\nimport SpeciesController from './Controllers/SpeciesController';\r\nimport BreedsController from './Controllers/BreedController';\r\n\r\nclass WhereIsMyPetApiClient {\r\n    public Users = new UsersController();\r\n    public Animals = new AnimalsController();\r\n    public Species = new SpeciesController();\r\n    public Breeds = new BreedsController();\r\n\r\n    private token = \"\";\r\n\r\n    public getToken () {\r\n        if(this.token) {\r\n            return this.token;\r\n        }\r\n        this.token = localStorage.getItem(\"user_token\") || \"\";\r\n        return this.token;\r\n    }\r\n\r\n    public setToken (token: string) {\r\n        this.token = token;\r\n\r\n        localStorage.setItem(\"user_token\", token);\r\n\r\n    }\r\n     \r\n}\r\n\r\nconst $WhereIsMyPetApiClient = new WhereIsMyPetApiClient();\r\n\r\nexport default $WhereIsMyPetApiClient;\r\n","import React from 'react';\r\nimport { Tabs, Tab } from '@material-ui/core';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nfunction SignUpMenu() {\r\n    const location = useLocation();\r\n\r\n    const value = /sign-in/.test(location.pathname) ? 1 : 0;\r\n\r\n    return (\r\n        <Tabs value={value} variant=\"fullWidth\" indicatorColor=\"primary\">\r\n            <Tab label=\"Sign Up\" component={Link} to=\"/sign-up\" />\r\n            <Tab label=\"Sign In\" component={Link} to=\"/sign-in\" />\r\n        </Tabs>\r\n    )\r\n}\r\nexport default SignUpMenu;","import React from \"react\";\r\nimport { Container, Grid, Paper, makeStyles, Backdrop, CircularProgress } from \"@material-ui/core\";\r\nimport SignUpMenu from \"../SignupMenu\";\r\n\r\ninterface IProps {\r\n    info?: string;\r\n    isLoading?: boolean;\r\n    showTabs?: boolean;\r\n    children: React.ReactNode;\r\n}\r\n\r\nfunction SignUpPagesLayout({ children, isLoading, showTabs = true }: IProps) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container className={classes.container}>\r\n            <h1 className={classes.title}>Welcome to Where is my pet?</h1>\r\n            <Grid container justify=\"center\">\r\n                <Grid component={Paper} xs={12} sm={10} md={6} item className={classes.wrapper}>\r\n                    {showTabs && <SignUpMenu />}\r\n                    {isLoading && (\r\n                        <div className={classes.backdrop}>\r\n                            <CircularProgress />\r\n                        </div>\r\n                    )}\r\n                    {children}\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        marginTop: \"0\",\r\n        marginBottom: \"2rem\",\r\n        fontSize: \"2rem\",\r\n        textAlign: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    container: {\r\n        paddingTop: \"3rem\",\r\n        minHeight: \"100vh\",\r\n        background: \"linear-gradient(rgba(167, 102, 10, 1), rgba(255, 136, 0, 1))\",\r\n    },\r\n    wrapper: {\r\n        padding: \"1em 1.2rem\",\r\n        position: \"relative\",\r\n        marginBottom: \"50px\"\r\n    },\r\n    backdrop: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: \"rgba(255, 255, 255, 0.5)\",\r\n        zIndex: 1\r\n    }\r\n})\r\n\r\nexport default SignUpPagesLayout;\r\n","import React, { Component, FormEvent, ChangeEvent } from 'react';\r\nimport $WhereIsMyPetApiClient from '../Services/WhereIsMyPetApiClient/WhereIsMyPetApiClient';\r\nimport { TextField, Button, withStyles, WithStyles, createStyles, Snackbar, InputAdornment, IconButton, TextFieldProps } from '@material-ui/core';\r\nimport { Alert } from \"@material-ui/lab\"\r\nimport SignUpPagesLayout from '../Components/Layouts/SignUpPagesLayout';\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\ninterface IState {\r\n    values: {\r\n        name: string;\r\n        surname: string;\r\n        email: string;\r\n        phone: string;\r\n        username: string;\r\n        password: string;\r\n    };\r\n    isSubmitting: boolean;\r\n    submitError: boolean;\r\n}\r\nclass SignUp extends Component<WithStyles<typeof styles>, IState> {\r\n    state: IState = {\r\n        values: {\r\n            name: \"\",\r\n            surname: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n        },\r\n        isSubmitting: false,\r\n        submitError: false\r\n    }\r\n    _onSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n        // cancel automatic browser submit\r\n        event.preventDefault();\r\n\r\n        this.setState({ isSubmitting: true });\r\n        try {\r\n            await $WhereIsMyPetApiClient.Users.SignUp(this.state.values);\r\n        } catch (e) {\r\n            this.setState({ submitError: true })\r\n        } finally {\r\n            this.setState({ isSubmitting: false });\r\n        }\r\n\r\n    }\r\n    _onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        // @ts-ignore\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                [event.currentTarget.name]: event.currentTarget.value,\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <SignUpPagesLayout isLoading={this.state.isSubmitting}>\r\n                {this.state.submitError && (\r\n                    <>\r\n                        <Alert severity=\"error\">Ups - Cannot create account!</Alert>\r\n                        <br />\r\n                    </>\r\n                )}\r\n                <p>\r\n                    Sign up to upload an animal!\r\n                </p>\r\n                <form onSubmit={this._onSubmit}>\r\n                    <TextField required margin={\"normal\"} type=\"text\" name=\"name\" onChange={this._onChange} label=\"Name\" variant=\"outlined\" className={classes.input} />\r\n                    <TextField required margin={\"normal\"} type=\"text\" name=\"surname\" onChange={this._onChange} label=\"Surname\" variant=\"outlined\" className={classes.input} />\r\n                    <TextField required margin={\"normal\"} type=\"email\" name=\"email\" onChange={this._onChange} label=\"Email\" variant=\"outlined\" className={classes.input} />\r\n                    <TextField required margin={\"normal\"} type=\"tel\" name=\"phone\" onChange={this._onChange} label=\"Mobile phone\" variant=\"outlined\" className={classes.input} />\r\n                    <TextField required margin={\"normal\"} type=\"text\" name=\"username\" onChange={this._onChange} label=\"Username\" variant=\"outlined\" className={classes.input} />\r\n                    <PasswordInput required margin={\"normal\"} name=\"password\" onChange={this._onChange} label=\"Password\" variant=\"outlined\" className={classes.input} />\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={this.state.isSubmitting} fullWidth>\r\n                        SIGN UP\r\n                    </Button>\r\n                </form>\r\n            </SignUpPagesLayout>\r\n        )\r\n    }\r\n}\r\n\r\nfunction PasswordInput(props: TextFieldProps) {\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n    const showPasswordButton = (\r\n        <InputAdornment position=\"end\">\r\n            <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n                onMouseDown={(e) => {e.preventDefault();}}\r\n            >\r\n                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n        </InputAdornment>\r\n    )\r\n    \r\n    return (\r\n        <TextField type={showPassword ? \"text\" : \"password\"}  InputProps={{endAdornment: showPasswordButton}} {...props} />\r\n    )\r\n}\r\n\r\nconst styles = createStyles({\r\n    container: {\r\n        minHeight: \"100vh\",\r\n        background: \"linear-gradient(rgba(167, 102, 10, 1), rgba(255, 136, 0, 1))\",\r\n    },\r\n    wrapper: {\r\n        padding: \"1em 1.2rem\",\r\n    },\r\n    input: {\r\n        width: \"100%\",\r\n    }\r\n\r\n})\r\n\r\nexport default withStyles(styles)(SignUp);","import React, { Component, FormEvent } from 'react';\r\nimport $WhereIsMyPetApiClient from '../Services/WhereIsMyPetApiClient/WhereIsMyPetApiClient';\r\nimport SignUpPagesLayout from '../Components/Layouts/SignUpPagesLayout';\r\nimport { TextField, Button, withStyles, WithStyles, createStyles, Grid, Link as MuiLink } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IState {\r\n    username: string,\r\n    password: string,\r\n    isSubmitting: boolean;\r\n    submitError: boolean;\r\n}\r\n\r\nclass SignIn extends Component<WithStyles<typeof styles>, IState> {\r\n    state: IState = {\r\n        username: \"\",\r\n        password: \"\",\r\n        isSubmitting: false,\r\n        submitError: false,\r\n    }\r\n    _onSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({ isSubmitting: true });\r\n        try {\r\n            const response = await $WhereIsMyPetApiClient.Users.SignIn(this.state.username, this.state.password);\r\n            $WhereIsMyPetApiClient.setToken(response.data.token);\r\n\r\n        } catch (e) {\r\n            this.setState({ submitError: true })\r\n        } finally {\r\n            this.setState({ isSubmitting: false });\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <SignUpPagesLayout isLoading={this.state.isSubmitting} >\r\n                {this.state.submitError && (\r\n                    <>\r\n                        <Alert severity=\"error\">Ups - Cannot create account!</Alert>\r\n                        <br />\r\n                    </>\r\n                )}\r\n                <p>\r\n                    Enter your username and password to sign in:\r\n                </p>\r\n                <form onSubmit={this._onSubmit}>\r\n                    <TextField required margin=\"normal\" type=\"text\" name=\"username\" label=\"Username\" variant=\"outlined\" className={classes.input} onChange={(event) => this.setState({ username: event.currentTarget.value })} />\r\n                    <TextField required margin=\"normal\" type=\"password\" name=\"password\" label=\"Password\" variant=\"outlined\" className={classes.input} onChange={(event) => this.setState({ password: event.currentTarget.value })} />\r\n\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={this.state.isSubmitting} fullWidth>\r\n                        SIGN IN\r\n                    </Button>\r\n\r\n                    <div className={classes.forgotPassword}>\r\n                        <MuiLink component={Link} to=\"/recover-password\">Forgot your password? Click here.</MuiLink>\r\n                    </div>\r\n                </form>\r\n            </SignUpPagesLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = createStyles({\r\n    input: {\r\n        width: \"100%\",\r\n    },\r\n    forgotPassword: {\r\n        marginTop: \"10px\",\r\n        textAlign: \"center\"\r\n    }\r\n\r\n})\r\n\r\nexport default withStyles(styles)(SignIn);\r\n","import React, { FormEvent } from 'react';\r\nimport $WhereIsMyPetApiClient from '../Services/WhereIsMyPetApiClient/WhereIsMyPetApiClient';\r\nimport SignUpPagesLayout from '../Components/Layouts/SignUpPagesLayout';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\ninterface IState {\r\n    username: string,\r\n    password: string,\r\n    isSubmitting: boolean;\r\n    submitError: boolean;\r\n}\r\n\r\nfunction RecoverPassword() {\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const h = query.get(\"h\");\r\n    \r\n    return (\r\n        <>\r\n            {!h && <RecoverPasswordWithoutToken />} \r\n            {h && <RecoverPasswordWithToken token={h} />}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction RecoverPasswordWithoutToken () {\r\n    const [isSubmitting, setIsSubmitting] = React.useState<boolean>(false);\r\n    const [submitSuccess, setSubmitSuccess] = React.useState<boolean>(false);\r\n    const [submitError, setSubmitError] = React.useState<boolean>(false);\r\n    const [emptyField, setEmptyField] = React.useState<boolean>(false);\r\n    const [invalidParams, setInvalidParams] = React.useState<boolean>(false);\r\n    const [usernameOrEmail, setUsernameOrEmail] = React.useState<string>(\"\");\r\n    const onSubmit = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        setSubmitError(false);\r\n        setSubmitSuccess(false);\r\n        setEmptyField(false);\r\n        setInvalidParams(false);\r\n\r\n        if(!usernameOrEmail) {\r\n            setEmptyField(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setIsSubmitting(true);\r\n            await $WhereIsMyPetApiClient.Users.SendResetPassword(usernameOrEmail);\r\n            setSubmitSuccess(true);\r\n        } catch (e) {\r\n            if (/Invalid Username or Email/.test(e?.response?.data)){\r\n                setInvalidParams(true);\r\n                return;\r\n            }\r\n            setSubmitError(true);\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n    return (\r\n        <SignUpPagesLayout isLoading={isSubmitting} showTabs={false}>\r\n            <h2>\r\n                Reset your password\r\n            </h2>\r\n            <p>\r\n                Enter your username or email to recover your account:\r\n            </p>\r\n            {submitSuccess && <Alert severity=\"success\">An email has been sent to your address. Please check your inbox.</Alert>}\r\n            {submitError && <Alert severity=\"error\">Ups - Something has gone wrong.</Alert>}\r\n            {emptyField && <Alert severity=\"warning\">Please, enter your username or email.</Alert>}\r\n            {invalidParams && <Alert severity=\"warning\">Invalid username or password.</Alert>}\r\n            <form onSubmit={onSubmit}>\r\n                <TextField\r\n                    type=\"text\"\r\n                    label=\"Username or Email\"\r\n                    onChange={(e) => setUsernameOrEmail(e.currentTarget.value)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                />\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                    Send recover email\r\n                </Button>\r\n            </form>\r\n        </SignUpPagesLayout>\r\n    )\r\n}\r\n\r\nfunction RecoverPasswordWithToken({token}: {token: string}) {\r\n    const [password, setPassword] = React.useState<string>(\"\");\r\n    const [password2, setPassword2] = React.useState<string>(\"\");\r\n    const [passwordsDoNotMatch, setPasswordsDoNotMatch] = React.useState<boolean>(false);\r\n    const [isSubmitting, setIsSubmitting] = React.useState<boolean>(false);\r\n    const [submitSuccess, setSubmitSuccess] = React.useState<boolean>(false);\r\n    const [submitError, setSubmitError] = React.useState<boolean>(false);\r\n    \r\n    const onSubmit = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        setSubmitError(false);\r\n        setSubmitSuccess(false);\r\n        setPasswordsDoNotMatch(false);\r\n\r\n        if (!password || password !== password2) {\r\n            setPasswordsDoNotMatch(true);\r\n            return;\r\n        } else {\r\n            setPasswordsDoNotMatch(false);\r\n        }\r\n\r\n        try {\r\n            setIsSubmitting(true);\r\n            await $WhereIsMyPetApiClient.Users.ResetPassword(token, password);\r\n            setSubmitSuccess(true);\r\n        } catch(e) {\r\n            setSubmitError(true);\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SignUpPagesLayout isLoading={isSubmitting} showTabs={false}>\r\n            <h2>\r\n                Reset your password\r\n            </h2>\r\n            <p>\r\n                Enter a new password for your account:\r\n            </p>\r\n            {submitSuccess && <Alert severity=\"success\">Your password has been updated</Alert>}\r\n            {submitError && <Alert severity=\"error\">Ups - Something has gone wrong.</Alert>}\r\n            {passwordsDoNotMatch && <Alert severity=\"warning\">Passwords do not match</Alert>}\r\n            <form onSubmit={onSubmit}>\r\n                <TextField\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    onChange={(e) => setPassword(e.currentTarget.value)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth \r\n                />\r\n                <TextField \r\n                    type=\"password\"\r\n                    label=\"Repeat your password\"\r\n                    onChange={(e) => setPassword2(e.currentTarget.value)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth \r\n                />\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                    Reset Password\r\n                </Button>\r\n            </form>\r\n        </SignUpPagesLayout>\r\n    )\r\n}\r\n\r\nexport default RecoverPassword;\r\n","import Axios from \"axios\";\r\n\r\nconst geocodeBaseUrl = \"https://nominatim.openstreetmap.org\";\r\nexport async function getAddress(lat: number, lng: number) {\r\n    const response = await Axios.get(`${geocodeBaseUrl}/reverse?lat=${lat}&lon=${lng}&format=json`);\r\n    return response.data;\r\n}\r\n\r\nexport async function getLatLon(search: string) {\r\n    const response = await Axios.get(`${geocodeBaseUrl}/search?q=spain ${search}&format=json`);\r\n    return response.data[0];\r\n}\r\n\r\nexport function getLocation() {\r\n    return new Promise<Position>((resolve, reject) => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(resolve);\r\n        } else {\r\n            reject();\r\n        }\r\n    })\r\n}","import React from 'react';\r\nimport { TextFieldProps, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\r\nimport GpsFixed from '@material-ui/icons/GpsFixed'\r\nimport Axios from 'axios';\r\nimport { getLocation, getAddress, getLatLon } from '../../Services/Geolocation/GeolocationService';\r\ninterface IOwnProps {\r\n    inputProps: TextFieldProps;\r\n    onChange?: (lat: number | null, lng: number | null) => void;\r\n}\r\n\r\nfunction LocationInput({ onChange = () => { }, inputProps }: IOwnProps) {\r\n    const [value, setValue] = React.useState(\"\");\r\n\r\n    async function locateUser() {\r\n        const currentLocation = await getLocation();\r\n        const location = await getAddress(currentLocation.coords.latitude, currentLocation.coords.longitude);\r\n        if (!location) {\r\n            return;\r\n        }\r\n        console.log(location);\r\n        const { address, lat, lon } = location;\r\n        setValue(`${address.postcode} ${address.town}`);\r\n\r\n        onChange(parseFloat(lat), parseFloat(lon));\r\n    }\r\n\r\n    async function locateUsingValue() {\r\n        if (!value) {\r\n            onChange(null, null);\r\n            return;\r\n        }\r\n        const location = await getLatLon(value);\r\n        if (!location) {\r\n            return;\r\n        }\r\n\r\n        const { lat, lon, display_name } = location;\r\n        setValue(display_name.split(',')[0]);\r\n\r\n        onChange(parseFloat(lat), parseFloat(lon));\r\n    }\r\n\r\n    React.useEffect(() => { locateUser(); }, []);\r\n\r\n\r\n    const locationButton = (\r\n        <InputAdornment position=\"end\">\r\n            <Tooltip title=\"Auto locate\" aria-label=\"add\" placement=\"right\">\r\n\r\n                <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={locateUser}\r\n                    onMouseDown={(e) => { e.preventDefault(); }}\r\n                >\r\n                    <GpsFixed />\r\n                </IconButton>\r\n            </Tooltip>\r\n        </InputAdornment>\r\n    )\r\n\r\n    return (\r\n        <TextField\r\n            type={\"text\"}\r\n            InputProps={{ endAdornment: locationButton }}\r\n            {...inputProps}\r\n            value={value}\r\n            onChange={(e) => setValue(e.currentTarget.value)}\r\n            onBlur={locateUsingValue}\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default LocationInput;","import React from \"react\";\r\nimport { FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, CircularProgress } from \"@material-ui/core\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { IAnimalFormValues} from \"../UploadAnimalForm\";\r\nimport $WhereIsMyPetApiClient from \"../../../Services/WhereIsMyPetApiClient/WhereIsMyPetApiClient\";\r\n\r\nconst Labels = {\r\n    CAT: \"Cat\",\r\n    DOG: \"Dog\",\r\n    OTHER: \"Others\"\r\n};\r\n\r\nfunction SpeciesInput() {\r\n    const { handleChange, values } = useFormikContext<IAnimalFormValues>();\r\n\r\n    const [species, setSpecies] = React.useState<string[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        $WhereIsMyPetApiClient.Species.Get()\r\n            .then(({data}) => setSpecies(data));\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" >\r\n            <FormLabel component=\"legend\" >Species</FormLabel>\r\n            <RadioGroup row aria-label=\"Species\" name=\"species\" value={values.species} onChange={handleChange} >\r\n                {species.map((specie) => (\r\n                    <FormControlLabel \r\n                        value={specie}\r\n                        control={< Radio />}\r\n                        // @ts-ignore\r\n                        label={Labels[specie] || \"\"} \r\n                    />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default SpeciesInput;","import React from \"react\";\r\nimport { Tabs, Tab } from \"@material-ui/core\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { IAnimalFormValues, EAnimalStatus } from \"../UploadAnimalForm\";\r\n\r\n\r\n\r\nfunction AnimalStatusInput({className}: {className?: string}) {\r\n    const {values, setFieldValue} = useFormikContext<IAnimalFormValues>();\r\n    return (\r\n        <Tabs \r\n            value={values.status}\r\n            variant=\"fullWidth\"\r\n            indicatorColor=\"primary\"\r\n            onChange={(_, newValue) => setFieldValue(\"status\", newValue)}\r\n            className={className}\r\n        >\r\n            <Tab value={EAnimalStatus.LOST} label=\"Lost\" />\r\n            <Tab value={EAnimalStatus.FOUND} label=\"Found\" />\r\n        </Tabs>\r\n    )\r\n}\r\n\r\nexport default AnimalStatusInput;\r\n","import React from \"react\";\r\nimport $WhereIsMyPetApiClient from \"../../../Services/WhereIsMyPetApiClient/WhereIsMyPetApiClient\";\r\nimport { Select, FormControl, InputLabel, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { IAnimalFormValues } from \"../UploadAnimalForm\";\r\n\r\ninterface IProps {\r\n    species: string;\r\n}\r\nfunction BreedInput({species}: IProps) {\r\n    const [breeds, setBreeds] = React.useState<string[]>([]);\r\n    const {values, handleChange} = useFormikContext<IAnimalFormValues>();\r\n    const classes = useStyles();\r\n    \r\n    React.useEffect(() => {\r\n        if (!species) {\r\n            return;\r\n        }\r\n        \r\n        $WhereIsMyPetApiClient.Breeds.Get(species)\r\n            .then(({ data }) => setBreeds(data.sort()));\r\n    }, [species])\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Breed</InputLabel>\r\n            <Select\r\n                native\r\n                value={values.breed}\r\n                onChange={handleChange}\r\n                label=\"Breed\"\r\n                inputProps={{\r\n                    name: 'breed',\r\n                    id: 'outlined-age-native-simple',\r\n                }}\r\n                disabled={!species}\r\n            >\r\n                <option aria-label=\"None\" value=\"\" />\r\n                {breeds.map((breed) => (\r\n                    <option value={breed}>{breed}</option>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default BreedInput;","import { useFormikContext } from \"formik\";\r\nimport { IAnimalFormValues, EAnimalSize } from \"../UploadAnimalForm\";\r\nimport React from \"react\";\r\nimport { FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, useTheme, useMediaQuery } from \"@material-ui/core\";\r\n\r\nfunction SizeInput(){\r\n    const {values, handleChange} = useFormikContext<IAnimalFormValues>();\r\n    const theme = useTheme();\r\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    return (\r\n        <FormControl component=\"fieldset\" >\r\n            <FormLabel component=\"legend\" >Size</FormLabel>\r\n            <RadioGroup \r\n                aria-label=\"Size\"\r\n                name=\"size\"\r\n                value={values.size}\r\n                onChange={handleChange}\r\n                row={isSmallScreen}\r\n            >\r\n                <FormControlLabel\r\n                    value={EAnimalSize.SMALL}\r\n                    control={< Radio />}\r\n                    label=\"Small\"\r\n                />\r\n                <FormControlLabel\r\n                    value={EAnimalSize.MEDIUM}\r\n                    control={< Radio />}\r\n                    label=\"Medium\"\r\n                />\r\n                <FormControlLabel\r\n                    value={EAnimalSize.BIG}\r\n                    control={< Radio />}\r\n                    label=\"Big\"\r\n                />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default SizeInput;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport AddPhotoIcon from \"@material-ui/icons/AddAPhotoOutlined\"\r\nimport { useFormikContext } from 'formik';\r\nimport { IAnimalFormValues } from '../UploadAnimalForm';\r\ninterface IProps {\r\n    className: string;\r\n}\r\nfunction AnimalImageInput({className}: IProps) {\r\n    const inputRef = React.useRef<HTMLInputElement>(null);\r\n    const classes = useStyles();\r\n    const [preview, setPreview] = React.useState<string>(\"\");\r\n    const {setFieldValue} = useFormikContext<IAnimalFormValues>();\r\n\r\n    function onChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        e.preventDefault();\r\n\r\n        if (!e.target.files?.length) {\r\n            return;\r\n        }\r\n\r\n        const reader = new FileReader();\r\n        const file = e.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n            if (typeof reader.result === \"string\") {\r\n                setPreview(reader.result);\r\n\r\n                setFieldValue(\"images\", file);\r\n            }\r\n        }\r\n        \r\n        reader.readAsDataURL(file);\r\n    }\r\n    \r\n    return (\r\n        <div className={`${classes.wrapper} ${className}`}>\r\n            <div \r\n                className={`${classes.previewWrapper}`}\r\n                onClick={() => inputRef.current?.click()}\r\n            >\r\n                {!preview && <AddPhotoIcon fontSize=\"large\" color=\"disabled\"/>}\r\n                {preview && (\r\n                    <img src={preview} className={classes.preview} />\r\n                )}\r\n            </div>\r\n            <input \r\n                onChange={onChange}\r\n                ref={inputRef}\r\n                className={classes.input}\r\n                type=\"file\"\r\n                accept=\"image/*\" \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        marginTop: \".5rem\",\r\n        marginBottom: \"1rem\"\r\n    },\r\n    wrapper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    previewWrapper: {\r\n        width: \"100%\",\r\n        height: \"24rem\",\r\n        flexGrow: 1,\r\n        border: `1px dashed ${theme.palette.divider}`,\r\n        borderRadius: theme.shape.borderRadius,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        background: theme.palette.grey[100],\r\n        cursor: \"pointer\"\r\n    },\r\n    preview: {\r\n        maxWidth: \"100%\",\r\n        maxHeight: \"100%\",\r\n    }\r\n}))\r\n\r\nexport default AnimalImageInput;\r\n","import React from 'react';\r\nimport { useFormikContext } from 'formik';\r\nimport { IAnimalFormValues, EAnimalGender } from '../UploadAnimalForm';\r\nimport { FormControl, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\n\r\nfunction AnimalGenderInput() {\r\n    const {values, handleChange} = useFormikContext<IAnimalFormValues>();\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" >\r\n            <FormLabel component=\"legend\" >Gender</FormLabel>\r\n            <RadioGroup\r\n                aria-label=\"Gender\"\r\n                name=\"gender\"\r\n                value={values.gender}\r\n                onChange={handleChange}\r\n                row\r\n            >\r\n                <FormControlLabel\r\n                    value={EAnimalGender.MALE}\r\n                    control={< Radio />}\r\n                    label=\"Male\"\r\n                />\r\n                <FormControlLabel\r\n                    value={EAnimalGender.FEMALE}\r\n                    control={< Radio />}\r\n                    label=\"Female\"\r\n                />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default AnimalGenderInput;","import React from 'react';\r\nimport { Formik, FormikBag, FormikHelpers, FormikConfig, Form, FormikProps, useFormikContext, Field, ErrorMessage } from 'formik';\r\nimport { TextField } from 'formik-material-ui';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport LocationInput from '../Inputs/LocationInput';\r\nimport SpeciesInput from './Fields/SpeciesInput';\r\nimport AnimalStatusInput from './Fields/StatusInput';\r\nimport BreedInput from './Fields/BreedInput';\r\nimport SizeInput from './Fields/SizeInput';\r\nimport AnimalImageInput from './Fields/AnimalImageInput';\r\nimport AnimalGenderInput from './Fields/AnimalGenderInput';\r\nimport $WhereIsMyPetApiClient from '../../Services/WhereIsMyPetApiClient/WhereIsMyPetApiClient';\r\n\r\nexport enum EAnimalStatus {\r\n    LOST = \"LOST\",\r\n    FOUND = \"FOUND\",\r\n}\r\n\r\nexport enum EAnimalSize {\r\n    SMALL = \"SMALL\",\r\n    MEDIUM = \"MEDIUM\",\r\n    BIG = \"BIG\",\r\n    EMPTY = \"\",\r\n}\r\n\r\nexport enum EAnimalGender {\r\n    MALE = \"MALE\",\r\n    FEMALE = \"FEMALE\",\r\n    EMPTY = \"\",\r\n}\r\n\r\nexport interface IAnimalFormValues {\r\n    status: EAnimalStatus;\r\n    species: string;\r\n    breed: string;\r\n    size: EAnimalSize;\r\n    color: string;\r\n    name: string;\r\n    gender: EAnimalGender;\r\n    age: string;\r\n    lat?: number;\r\n    lng?: number;\r\n    images?: File;\r\n}\r\n\r\nconst initialValues: IAnimalFormValues = {\r\n    status: EAnimalStatus.FOUND,\r\n    species: \"\",\r\n    breed: \"\",\r\n    size: EAnimalSize.EMPTY,\r\n    color: \"\",\r\n    name: \"\",\r\n    gender: EAnimalGender.EMPTY,\r\n    age: \"\",\r\n    lat: undefined,\r\n    lng: undefined,\r\n    images: undefined,\r\n}\r\n\r\nfunction UploadAnimalFormContainer() {\r\n    async function onSubmit(values: IAnimalFormValues, { setSubmitting }: FormikHelpers<IAnimalFormValues>) {\r\n        try {\r\n            await $WhereIsMyPetApiClient.Animals.UploadAnimal(values);\r\n        } catch{\r\n\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    }\r\n\r\n    function validate(values: IAnimalFormValues) {\r\n        let errors = {};\r\n        if (!values.status) {\r\n            // @ts-ignore\r\n            errors.status = \"You must enter the status for the animal\";\r\n        }\r\n        if (!values.species) {\r\n            // @ts-ignore\r\n            errors.species = \"You must enter the species for the animal\";\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validate={validate}\r\n        >\r\n            <UploadAnimalForm />\r\n        </Formik>\r\n    );\r\n}\r\n\r\nfunction UploadAnimalForm(/* {handleChange, handleBlur, values}: FormikProps<IAnimalFormValues> */) {\r\n    const { isSubmitting, isValid, setFieldValue, values } = useFormikContext<IAnimalFormValues>();\r\n    const classes = useStyles();\r\n    return (\r\n        <Form className={classes.form}>\r\n            <AnimalStatusInput className={classes.statusInput} />\r\n            <SpeciesInput />\r\n            <BreedInput species={values.species} />\r\n            <AnimalImageInput className={classes.animalImageInput} />\r\n            <SizeInput />\r\n            <Field\r\n                component={TextField}\r\n                name=\"color\"\r\n                label=\"Color\"\r\n                variant=\"outlined\"\r\n            />\r\n            {values.status === EAnimalStatus.LOST && (\r\n                <>\r\n                    <Field\r\n                        component={TextField}\r\n                        name=\"age\"\r\n                        label=\"Pet Age\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <AnimalGenderInput />\r\n                    <Field\r\n                        component={TextField}\r\n                        name=\"name\"\r\n                        label=\"Pet name\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </>\r\n            )}\r\n            <LocationInput\r\n                inputProps={{\r\n                    label: \"Enter your town or postcode\",\r\n                    className: classes.locationInput\r\n                }}\r\n                onChange={(lat, lng) => {\r\n                    setFieldValue(\"lat\", lat);\r\n                    setFieldValue(\"lng\", lng);\r\n                }}\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isSubmitting || !isValid}\r\n                className={classes.uploadButton}\r\n            >\r\n                UPLOAD\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        display: \"grid\",\r\n        gridGap: \"15px\",\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            gridTemplateColumns: \"1fr 1fr\",\r\n        }\r\n    },\r\n    statusInput: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            gridColumn: \"span 2\",\r\n        }\r\n    },\r\n    uploadButton: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            gridColumn: \"span 2\",\r\n        }\r\n    },\r\n    locationInput: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            gridColumn: \"span 2\",\r\n        }\r\n    },\r\n    animalImageInput: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            gridRow: \"span 5\",\r\n        }\r\n    },\r\n\r\n}))\r\nexport default UploadAnimalFormContainer;","import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Typography, Button, makeStyles, Theme, createStyles } from '@material-ui/core';\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Where is my pet\r\n                    </Typography>\r\n                    <Button color=\"inherit\" component={Link} to=\"/sign-in\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n    }),\r\n);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport Header from \"./Header\";\r\n\r\ninterface IProps {\r\n    children: React.ReactNode;\r\n}\r\nfunction MainLayout({children}: IProps) {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Container>\r\n                <Grid container justify=\"center\">\r\n                    {children}\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\r\nimport UploadAnimalFormContainer from '../Components/UploadAnimalForm/UploadAnimalForm';\r\nimport MainLayout from '../Components/Layouts/MainLayout/MainLayout';\r\n\r\nfunction UploadAnimal() {\r\n\r\n    return (\r\n        <MainLayout>\r\n            <UploadAnimalFormContainer />\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default UploadAnimal;","import React from 'react';\r\n\r\nfunction ViewAnimal() {\r\n    return(\r\n        <div></div>\r\n    );\r\n}\r\nexport default ViewAnimal;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SignUp from './Pages/SignUp';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport SignIn from './Pages/SignIn';\r\nimport { Switch, Route, HashRouter as Router, Redirect } from 'react-router-dom';\r\nimport RecoverPassword from './Pages/RecoverPassword';\r\nimport UploadAnimal from './Pages/UploadAnimal';\r\nimport ViewAnimal from './Pages/ViewAnimal';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/sign-in\">\r\n          <SignIn />\r\n        </Route>\r\n        <Route path=\"/sign-up\">\r\n          <SignUp />\r\n        </Route>\r\n        <Route path=\"/recover-password\">\r\n          <RecoverPassword />\r\n        </Route>\r\n        <Route path=\"/upload-animal\">\r\n          <UploadAnimal />\r\n        </Route>\r\n        <Route path=\"/view-animal\">\r\n          <ViewAnimal />\r\n        </Route>\r\n        <Redirect to=\"/sign-in\" />\r\n      </Switch>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}