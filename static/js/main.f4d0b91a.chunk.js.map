{"version":3,"sources":["config.ts","Services/WhereIsMyPetApiClient/Controllers/UserController.ts","Services/WhereIsMyPetApiClient/Controllers/BaseController.ts","Services/WhereIsMyPetApiClient/WhereIsMyPetApiClient.ts","Components/SignupMenu.tsx","Components/Layouts/SignUpPagesLayout.tsx","Pages/SignUp.tsx","Pages/SignIn.tsx","Pages/RecoverPassword.tsx","index.tsx"],"names":["Config","BASE_URL","UsersController","token","password","this","makeRequest","method","url","params","newPassword","usernameOrEmail","user","username","headers","axios","request","data","$WhereIsMyPetApiClient","Users","SignUpMenu","location","useLocation","value","test","pathname","Tabs","variant","indicatorColor","Tab","label","component","Link","to","useStyles","makeStyles","title","marginTop","marginBottom","fontSize","textAlign","width","container","paddingTop","minHeight","background","wrapper","padding","position","backdrop","display","justifyContent","alignItems","top","left","height","zIndex","SignUpPagesLayout","children","isLoading","showTabs","classes","Container","className","Grid","justify","Paper","xs","sm","md","item","CircularProgress","SignUp","state","name","surname","email","phone","isSubmitting","submitError","_onSubmit","event","a","preventDefault","setState","_onChange","currentTarget","props","Alert","severity","onSubmit","TextField","margin","type","onChange","input","PasswordInput","Button","color","disabled","fullWidth","Component","React","useState","showPassword","setShowPassword","showPasswordButton","InputAdornment","IconButton","aria-label","onClick","onMouseDown","e","InputProps","endAdornment","styles","createStyles","withStyles","SignIn","forgotPassword","RecoverPasswordWithoutToken","setIsSubmitting","submitSuccess","setSubmitSuccess","setSubmitError","emptyField","setEmptyField","invalidParams","setInvalidParams","setUsernameOrEmail","SendResetPassword","response","RecoverPasswordWithToken","setPassword","password2","setPassword2","passwordsDoNotMatch","setPasswordsDoNotMatch","ResetPassword","RecoverPassword","h","URLSearchParams","search","get","ReactDOM","render","StrictMode","CssBaseline","path","document","getElementById"],"mappings":"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","file":"static/js/main.f4d0b91a.chunk.js","sourcesContent":["const isProduction = process.env.NODE_ENV === \"production\";\r\n\r\nconst Config = {\r\n    BASE_URL: isProduction ? \"https://where-is-my-pet.herokuapp.com\" : \"http://localhost:3001\",\r\n}\r\n\r\nexport default Config;","import BaseController from \"./BaseController\";\r\n\r\ninterface ISignUpParams {\r\n    name: string;\r\n    surname: string;\r\n    email: string;\r\n    phone: string;\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nclass UsersController extends BaseController {\r\n    public ResetPassword(token: string, password: string) {\r\n        const url = \"/users/reset-password\";\r\n\r\n        return this.makeRequest<void>({\r\n            method: \"POST\",\r\n            url,\r\n            params: {token, newPassword: password}\r\n        })\r\n    }\r\n\r\n    public SendResetPassword( usernameOrEmail: string) {\r\n        const url = \"/users/reset-password-email\";\r\n\r\n        return this.makeRequest<void>({\r\n            method: \"POST\",\r\n            url,\r\n            params: { usernameOrEmail: usernameOrEmail }\r\n        })\r\n    }\r\n\r\n    public SignUp(user: ISignUpParams) {\r\n        const url = \"/users/sign-up\";\r\n\r\n        return this.makeRequest<{ token: string }>({\r\n            method: \"POST\",\r\n            url,\r\n            params: user\r\n        });\r\n    }\r\n\r\n    public SignIn(username: string, password: string) {\r\n        const url = \"/users/sign-in\";\r\n\r\n        return this.makeRequest<{ token: string }>({\r\n            method: \"POST\",\r\n            url,\r\n            params: { username, password }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default UsersController;\r\n","import axios from \"axios\";\r\nimport Config from \"../../../config\";\r\n\r\ninterface IMakeRequestParams {\r\n    method: \"GET\" | \"POST\";\r\n    url: string;\r\n    params?: object;\r\n    headers?: object;\r\n}\r\n\r\nabstract class BaseController {\r\n\r\n    protected makeRequest<T = any>({ method, params = {}, headers = {}, url }: IMakeRequestParams) {\r\n        return axios.request<T>({\r\n            method,\r\n            url: `${Config.BASE_URL}${url}`,\r\n            data: params,\r\n            headers,\r\n        })\r\n    }\r\n}\r\n\r\nexport default BaseController;\r\n","import UsersController from './Controllers/UserController';\r\n\r\nclass WhereIsMyPetApiClient {\r\n    public Users = new UsersController();\r\n}\r\n\r\nconst $WhereIsMyPetApiClient = new WhereIsMyPetApiClient();\r\n\r\nexport default $WhereIsMyPetApiClient;\r\n","import React from 'react';\r\nimport { Tabs, Tab } from '@material-ui/core';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nfunction SignUpMenu() {\r\n    const location = useLocation();\r\n\r\n    const value = /sign-in/.test(location.pathname) ? 1 : 0;\r\n\r\n    return (\r\n        <Tabs value={value} variant=\"fullWidth\" indicatorColor=\"primary\">\r\n            <Tab label=\"Sign Up\" component={Link} to=\"/sign-up\" />\r\n            <Tab label=\"Sign In\" component={Link} to=\"/sign-in\" />\r\n        </Tabs>\r\n    )\r\n}\r\nexport default SignUpMenu;","import React from \"react\";\r\nimport { Container, Grid, Paper, makeStyles, Backdrop, CircularProgress } from \"@material-ui/core\";\r\nimport SignUpMenu from \"../SignupMenu\";\r\n\r\ninterface IProps {\r\n    info?: string;\r\n    isLoading?: boolean;\r\n    showTabs?: boolean;\r\n    children: React.ReactNode;\r\n}\r\n\r\nfunction SignUpPagesLayout({ children, isLoading, showTabs = true }: IProps) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container className={classes.container}>\r\n            <h1 className={classes.title}>Welcome to Where is my pet?</h1>\r\n            <Grid container justify=\"center\">\r\n                <Grid component={Paper} xs={12} sm={10} md={6} item className={classes.wrapper}>\r\n                    {showTabs && <SignUpMenu />}\r\n                    {isLoading && (\r\n                        <div className={classes.backdrop}>\r\n                            <CircularProgress />\r\n                        </div>\r\n                    )}\r\n                    {children}\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        marginTop: \"0\",\r\n        marginBottom: \"2rem\",\r\n        fontSize: \"2rem\",\r\n        textAlign: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    container: {\r\n        paddingTop: \"3rem\",\r\n        minHeight: \"100vh\",\r\n        background: \"linear-gradient(rgba(167, 102, 10, 1), rgba(255, 136, 0, 1))\",\r\n    },\r\n    wrapper: {\r\n        padding: \"1em 1.2rem\",\r\n        position: \"relative\",\r\n        marginBottom: \"50px\"\r\n    },\r\n    backdrop: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: \"rgba(255, 255, 255, 0.5)\",\r\n        zIndex: 1\r\n    }\r\n})\r\n\r\nexport default SignUpPagesLayout;\r\n","import React, { Component, FormEvent, ChangeEvent } from 'react';\r\nimport $WhereIsMyPetApiClient from '../Services/WhereIsMyPetApiClient/WhereIsMyPetApiClient';\r\nimport { TextField, Button, withStyles, WithStyles, createStyles, Snackbar, InputAdornment, IconButton, TextFieldProps } from '@material-ui/core';\r\nimport { Alert } from \"@material-ui/lab\"\r\nimport SignUpPagesLayout from '../Components/Layouts/SignUpPagesLayout';\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\ninterface IState {\r\n    name: string;\r\n    surname: string;\r\n    email: string;\r\n    phone: string;\r\n    username: string;\r\n    password: string;\r\n    isSubmitting: boolean;\r\n    submitError: boolean;\r\n}\r\nclass SignUp extends Component<WithStyles<typeof styles>, IState> {\r\n    state: IState = {\r\n        name: \"\",\r\n        surname: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        isSubmitting: false,\r\n        submitError: false\r\n    }\r\n    _onSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n        // cancel automatic browser submit\r\n        event.preventDefault();\r\n\r\n        this.setState({ isSubmitting: true });\r\n        try {\r\n            await $WhereIsMyPetApiClient.Users.SignUp(this.state);\r\n        } catch (e) {\r\n            this.setState({ submitError: true })\r\n        } finally {\r\n            this.setState({ isSubmitting: false });\r\n        }\r\n\r\n    }\r\n    _onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        // @ts-ignore\r\n        this.setState({\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        });\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <SignUpPagesLayout isLoading={this.state.isSubmitting}>\r\n                {this.state.submitError && (\r\n                    <>\r\n                        <Alert severity=\"error\">Ups - Cannot create account!</Alert>\r\n                        <br />\r\n                    </>\r\n                )}\r\n                <p>\r\n                    Sign up to upload an animal!\r\n                </p>\r\n                <form onSubmit={this._onSubmit}>\r\n                    <TextField margin={\"normal\"} type=\"text\" name=\"name\" onChange={this._onChange} label=\"Name\" variant=\"outlined\" className={classes.input} />\r\n                    <TextField margin={\"normal\"} type=\"text\" name=\"surname\" onChange={this._onChange} label=\"Surname\" variant=\"outlined\" className={classes.input} />\r\n                    <TextField margin={\"normal\"} type=\"email\" name=\"email\" onChange={this._onChange} label=\"Email\" variant=\"outlined\" className={classes.input} />\r\n                    <TextField margin={\"normal\"} type=\"tel\" name=\"phone\" onChange={this._onChange} label=\"Mobile phone\" variant=\"outlined\" className={classes.input} />\r\n                    <TextField margin={\"normal\"} type=\"text\" name=\"username\" onChange={this._onChange} label=\"Username\" variant=\"outlined\" className={classes.input} />\r\n                    <PasswordInput margin={\"normal\"} name=\"password\" onChange={this._onChange} label=\"Password\" variant=\"outlined\" className={classes.input} />\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={this.state.isSubmitting} fullWidth>\r\n                        SIGN UP\r\n                    </Button>\r\n                </form>\r\n            </SignUpPagesLayout>\r\n        )\r\n    }\r\n}\r\n\r\nfunction PasswordInput(props: TextFieldProps) {\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n    const showPasswordButton = (\r\n        <InputAdornment position=\"end\">\r\n            <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n                onMouseDown={(e) => {e.preventDefault();}}\r\n            >\r\n                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n        </InputAdornment>\r\n    )\r\n    \r\n    return (\r\n        <TextField type={showPassword ? \"text\" : \"password\"}  InputProps={{endAdornment: showPasswordButton}} {...props} />\r\n    )\r\n}\r\n\r\nconst styles = createStyles({\r\n    container: {\r\n        minHeight: \"100vh\",\r\n        background: \"linear-gradient(rgba(167, 102, 10, 1), rgba(255, 136, 0, 1))\",\r\n    },\r\n    wrapper: {\r\n        padding: \"1em 1.2rem\",\r\n    },\r\n    input: {\r\n        width: \"100%\",\r\n    }\r\n\r\n})\r\n\r\nexport default withStyles(styles)(SignUp);","import React, { Component, FormEvent } from 'react';\r\nimport $WhereIsMyPetApiClient from '../Services/WhereIsMyPetApiClient/WhereIsMyPetApiClient';\r\nimport SignUpPagesLayout from '../Components/Layouts/SignUpPagesLayout';\r\nimport { TextField, Button, withStyles, WithStyles, createStyles, Grid, Link as MuiLink } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IState {\r\n    username: string,\r\n    password: string,\r\n    isSubmitting: boolean;\r\n    submitError: boolean;\r\n}\r\n\r\nclass SignIn extends Component<WithStyles<typeof styles>, IState> {\r\n    state: IState = {\r\n        username: \"\",\r\n        password: \"\",\r\n        isSubmitting: false,\r\n        submitError: false,\r\n    }\r\n    _onSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({ isSubmitting: true });\r\n        try {\r\n            const response = await $WhereIsMyPetApiClient.Users.SignIn(this.state.username, this.state.password);\r\n\r\n        } catch (e) {\r\n            this.setState({ submitError: true })\r\n        } finally {\r\n            this.setState({ isSubmitting: false });\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <SignUpPagesLayout isLoading={this.state.isSubmitting} >\r\n                {this.state.submitError && (\r\n                    <>\r\n                        <Alert severity=\"error\">Ups - Cannot create account!</Alert>\r\n                        <br />\r\n                    </>\r\n                )}\r\n                <p>\r\n                    Enter your username and password to sign in:\r\n                </p>\r\n                <form onSubmit={this._onSubmit}>\r\n                    <TextField margin=\"normal\" type=\"text\" name=\"username\" label=\"Username\" variant=\"outlined\" className={classes.input} onChange={(event) => this.setState({ username: event.currentTarget.value })} />\r\n                    <TextField margin=\"normal\" type=\"password\" name=\"password\" label=\"Password\" variant=\"outlined\" className={classes.input} onChange={(event) => this.setState({ password: event.currentTarget.value })} />\r\n\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={this.state.isSubmitting} fullWidth>\r\n                        SIGN IN\r\n                    </Button>\r\n\r\n                    <div className={classes.forgotPassword}>\r\n                        <MuiLink component={Link} to=\"/recover-password\">Forgot your password? Click here.</MuiLink>\r\n                    </div>\r\n                </form>\r\n            </SignUpPagesLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = createStyles({\r\n    input: {\r\n        width: \"100%\",\r\n    },\r\n    forgotPassword: {\r\n        marginTop: \"10px\",\r\n        textAlign: \"center\"\r\n    }\r\n\r\n})\r\n\r\nexport default withStyles(styles)(SignIn);\r\n","import React, { FormEvent } from 'react';\r\nimport $WhereIsMyPetApiClient from '../Services/WhereIsMyPetApiClient/WhereIsMyPetApiClient';\r\nimport SignUpPagesLayout from '../Components/Layouts/SignUpPagesLayout';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\ninterface IState {\r\n    username: string,\r\n    password: string,\r\n    isSubmitting: boolean;\r\n    submitError: boolean;\r\n}\r\n\r\nfunction RecoverPassword() {\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const h = query.get(\"h\");\r\n    \r\n    return (\r\n        <>\r\n            {!h && <RecoverPasswordWithoutToken />} \r\n            {h && <RecoverPasswordWithToken token={h} />}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction RecoverPasswordWithoutToken () {\r\n    const [isSubmitting, setIsSubmitting] = React.useState<boolean>(false);\r\n    const [submitSuccess, setSubmitSuccess] = React.useState<boolean>(false);\r\n    const [submitError, setSubmitError] = React.useState<boolean>(false);\r\n    const [emptyField, setEmptyField] = React.useState<boolean>(false);\r\n    const [invalidParams, setInvalidParams] = React.useState<boolean>(false);\r\n    const [usernameOrEmail, setUsernameOrEmail] = React.useState<string>(\"\");\r\n    const onSubmit = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        setSubmitError(false);\r\n        setSubmitSuccess(false);\r\n        setEmptyField(false);\r\n        setInvalidParams(false);\r\n\r\n        if(!usernameOrEmail) {\r\n            setEmptyField(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setIsSubmitting(true);\r\n            await $WhereIsMyPetApiClient.Users.SendResetPassword(usernameOrEmail);\r\n            setSubmitSuccess(true);\r\n        } catch (e) {\r\n            if (/Invalid Username or Email/.test(e?.response?.data)){\r\n                setInvalidParams(true);\r\n                return;\r\n            }\r\n            setSubmitError(true);\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n    return (\r\n        <SignUpPagesLayout isLoading={isSubmitting} showTabs={false}>\r\n            <h2>\r\n                Reset your password\r\n            </h2>\r\n            <p>\r\n                Enter your username or email to recover your account:\r\n            </p>\r\n            {submitSuccess && <Alert severity=\"success\">An email has been sent to your address. Please check your inbox.</Alert>}\r\n            {submitError && <Alert severity=\"error\">Ups - Something has gone wrong.</Alert>}\r\n            {emptyField && <Alert severity=\"warning\">Please, enter your username or email.</Alert>}\r\n            {invalidParams && <Alert severity=\"warning\">Invalid username or password.</Alert>}\r\n            <form onSubmit={onSubmit}>\r\n                <TextField\r\n                    type=\"text\"\r\n                    label=\"Username or Email\"\r\n                    onChange={(e) => setUsernameOrEmail(e.currentTarget.value)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                />\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                    Send recover email\r\n                </Button>\r\n            </form>\r\n        </SignUpPagesLayout>\r\n    )\r\n}\r\n\r\nfunction RecoverPasswordWithToken({token}: {token: string}) {\r\n    const [password, setPassword] = React.useState<string>(\"\");\r\n    const [password2, setPassword2] = React.useState<string>(\"\");\r\n    const [passwordsDoNotMatch, setPasswordsDoNotMatch] = React.useState<boolean>(false);\r\n    const [isSubmitting, setIsSubmitting] = React.useState<boolean>(false);\r\n    const [submitSuccess, setSubmitSuccess] = React.useState<boolean>(false);\r\n    const [submitError, setSubmitError] = React.useState<boolean>(false);\r\n    \r\n    const onSubmit = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        setSubmitError(false);\r\n        setSubmitSuccess(false);\r\n        setPasswordsDoNotMatch(false);\r\n\r\n        if (!password || password !== password2) {\r\n            setPasswordsDoNotMatch(true);\r\n            return;\r\n        } else {\r\n            setPasswordsDoNotMatch(false);\r\n        }\r\n\r\n        try {\r\n            setIsSubmitting(true);\r\n            await $WhereIsMyPetApiClient.Users.ResetPassword(token, password);\r\n            setSubmitSuccess(true);\r\n        } catch(e) {\r\n            setSubmitError(true);\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SignUpPagesLayout isLoading={isSubmitting} showTabs={false}>\r\n            <h2>\r\n                Reset your password\r\n            </h2>\r\n            <p>\r\n                Enter a new password for your account:\r\n            </p>\r\n            {submitSuccess && <Alert severity=\"success\">Your password has been updated</Alert>}\r\n            {submitError && <Alert severity=\"error\">Ups - Something has gone wrong.</Alert>}\r\n            {passwordsDoNotMatch && <Alert severity=\"warning\">Passwords do not match</Alert>}\r\n            <form onSubmit={onSubmit}>\r\n                <TextField\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    onChange={(e) => setPassword(e.currentTarget.value)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth \r\n                />\r\n                <TextField \r\n                    type=\"password\"\r\n                    label=\"Repeat your password\"\r\n                    onChange={(e) => setPassword2(e.currentTarget.value)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth \r\n                />\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                    Reset Password\r\n                </Button>\r\n            </form>\r\n        </SignUpPagesLayout>\r\n    )\r\n}\r\n\r\nexport default RecoverPassword;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SignUp from './Pages/SignUp';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport SignIn from './Pages/SignIn';\r\nimport { Switch, Route, HashRouter as Router, Redirect } from 'react-router-dom';\r\nimport RecoverPassword from './Pages/RecoverPassword';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/sign-in\">\r\n          <SignIn />\r\n        </Route>\r\n        <Route path=\"/sign-up\">\r\n          <SignUp />\r\n        </Route>\r\n        <Route path=\"/recover-password\">\r\n          <RecoverPassword />\r\n        </Route>\r\n        <Redirect to=\"/sign-in\" />\r\n      </Switch>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}